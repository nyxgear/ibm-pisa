FROM debian:9
MAINTAINER nyxgear <dev@nyxgear.com>

##################################
# BUILDING STAGE 0
##################################

# Update dependencies
RUN apt-get update && \
    apt-get upgrade -y

# Install required packages
RUN apt-get install -y  \
    curl                \
    wget                \
    build-essential     \
    python              \
    git                 \
    cmake               \
    groff

RUN apt-get autoremove

# Create llvm-root directory
RUN mkdir /llvm-root

WORKDIR /llvm-root

ENV LLVM_ROOT=/llvm-root

# 1. Get the LLVM source code
RUN wget -q http://llvm.org/releases/3.4/llvm-3.4.src.tar.gz                    && \
    tar -xzvf llvm-3.4.src.tar.gz


# 3. Configure, compile and install clang
# We will use clang with openMP support (x86_64 architectures).
# For other architectures use the official clang version.
RUN cd $LLVM_ROOT                                                               && \
    git clone https://github.com/clang-omp/clang llvm-3.4/tools/clang           && \
    cd llvm-3.4/tools/clang                                                     && \
    git checkout 34 # clang version for LLVM 3.4
# 4. Rebuild LLVM (configure, compile and install)

# Configure, compile and install LLVM is done only once: with also included clang

# 2. Configure, compile and install LLVM
ENV LLVM_ENABLE_THREADS=1
RUN cd $LLVM_ROOT                                                               && \
    mkdir llvm-build                                                            && \
    mkdir llvm-install                                                          && \
    cd llvm-build                                                               && \
    ../llvm-3.4/configure --enable-optimized --prefix=$LLVM_ROOT/llvm-install   && \
    make -j4                                                                    && \
    make install
