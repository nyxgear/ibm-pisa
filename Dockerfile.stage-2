FROM nyxgear/ibm-pisa:stage-1
MAINTAINER nyxgear <dev@nyxgear.com>

##################################
# BUILDING STAGE 2
##################################

WORKDIR /llvm-root

ENV LLVM_ROOT=/llvm-root
ENV ANALYSIS_ROOT_DIR=/llvm-root/ibm-pisa


# 8. Configure and compile the analysis pass and the library
RUN cd $LLVM_ROOT                                                               && \
    git clone https://github.com/exabounds/ibm-pisa.git
    # cd ibm-pisa                                                               
    # export ANALYSIS_ROOT_DIR=$(pwd)                                                               
    # Copy my_env.sh and set the local paths.
    # (Re)Edit the my_env.sh file to change the paths accordingly.
    # source my_env.sh

# seting up env variables

# set to $LLVM_ROOT/llvm-install
ENV PISA_ROOT=/llvm-root
ENV LLVM_INSTALL=$PISA_ROOT/llvm-install
ENV LLVM_BUILD=$PISA_ROOT/llvm-build
ENV LLVM_SRC=$PISA_ROOT/llvm-3.4

# set to $OPENMP_DIR
ENV OPENMP_DIR=$PISA_ROOT/libomp_oss

# set to $MPI_DIR
ENV MPI_DIR=$PISA_ROOT/openmpi-1.10.2

# set to include dir of rapidjson library
ENV RAPID_JSON=$PISA_ROOT/rapidjson/include

ENV PATH=$MPI_DIR/bin:$LLVM_INSTALL/bin:$PATH

ENV C_INCLUDE_PATH=$MPI_DIR/include:$LLVM_INSTALL/include:$OPENMP_DIR/exports/common/include
ENV C_INCLUDE_PATH=$RAPID_JSON:$C_INCLUDE_PATH
ENV CPLUS_INCLUDE_PATH=$MPI_DIR/include:$LLVM_INSTALL/include:$OPENMP_DIR/exports/common/include
ENV CPLUS_INCLUDE_PATH=$RAPID_JSON:$CPLUS_INCLUDE_PATH

ENV LIBRARY_PATH=$MPI_DIR/lib:$MPI_DIR/lib/openmpi:$LLVM_INSTALL/lib:$OPENMP_DIR/exports/lin_32e/lib
ENV LD_LIBRARY_PATH=$MPI_DIR/lib:$MPI_DIR/lib/openmpi:$LLVM_INSTALL/lib:$OPENMP_DIR/exports/lin_32e/lib
ENV LD_RUN_PATH=$MPI_DIR/lib:$MPI_DIR/lib/openmpi:$LD_RUN_PATH

# AFTER building the analysis pass:


# # Set ANALYSIS_LIB_PATH
ENV COUPLED_PASS_PATH=$PISA_ROOT/analysis-install/lib
# ENV DECOUPLED_PASS_PATH=$PISA_ROOT/PISApass-decoupled-install/lib

# Set LIB_PATH
ENV PISA_LIB_PATH=$PISA_ROOT/ibm-pisa/library

ENV LD_LIBRARY_PATH=$PISA_LIB_PATH:$LD_LIBRARY_PATH

## This variable is used for automatic generation and verification of tests outputs
ENV PISA_EXAMPLES=$PISA_ROOT/ibm-pisa/example-compile-profile

## Analyze FORTRAN code with Dragonegg + LLVM-3.5.2
# ENV GCC=gcc-4.8
# ENV CC=gcc-4.8
# ENV CXX=g++-4.8
# ENV CFORTRAN=gcc-4.8
# ENV DRAGONEGG_PATH=$PISA_ROOT/dragonegg-3.5.2.src
# ENV LD_LIBRARY_PATH=$LD_LIBRARY_PATH:$PISA_LIB_PATH:$DRAGONEGG_PATH
# ENV LIBRARY_PATH=$LIBRARY_PATH:$PISA_LIB_PATH:$DRAGONEGG_PATH

## Additional PISA inputs and outputs
# ENV PISAFileName=output.json
# ENV AddJSONData=header.json

## Print PISA output in JSON pretty print
ENV PRETTYPRINT=$PISA_ROOT/ibm-pisa/example-compile-profile/prettyPrint.sh

